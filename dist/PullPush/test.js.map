{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import * as pp from \"./PullPush.ts\"\n\nconsole.group(\"PullPushStringQueue\")\nconsole.log(\"Asserting...\")\n{\n  const q = new pp.PullPushStringQueue()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more())\n  q.push(\"123\")\n  console.assert(q.length() === 3, \"q.length() === 3:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  let s = q.pop()\n  console.assert(q.length() === 2, \"q.length() === 2:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  console.assert(q.all() === \"12\", 'q.all() === \"12\":', q.all())\n  console.assert(s === \"3\", 's === \"3\":', s)\n  q.empty()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more())\n  q.push(\"123456\")\n  console.assert(q.all() === \"123456\", 'q.all() === \"123456\":', q.all())\n  s = q.splice(2, 1)\n  console.assert(q.all() === \"12456\", 'q.all() === \"12456\":', q.all())\n  console.assert(s === \"3\", 's === \"3\":', s)\n  s = q.splice(-1)\n  console.assert(q.all() === \"1245\", 'q.all() === \"1245\":', q.all())\n  console.assert(s === \"6\", 's === \"6\":', s)\n  s = q.splice(1)\n  console.assert(q.all() === \"1\", 'q.all() === \"1\":', q.all())\n  console.assert(s === \"245\", 's === \"245\":', s)\n  q.unshift(\"0\")\n  console.assert(q.all() === \"01\", 'q.all() === \"01\":', q.all())\n  s = q.shift()\n  console.assert(q.all() === \"1\", 'q.all() === \"1\":', q.all())\n  console.assert(s === \"0\", 's === \"0\":', s)\n  s = q.shift()\n  console.assert(q.all() === \"\", 'q.all() === \"\":', q.all())\n  console.assert(s === \"1\", 's === \"1\":', s)\n  s = q.shift()\n  console.assert(q.all() === \"\", 'q.all() === \"\":', q.all())\n  console.assert(s === \"\", 's === \"\":', s)\n}\nconsole.groupEnd()\n\nconsole.group(\"PullPushArrayQueue\")\nconsole.log(\"Asserting...\")\n{\n  const q = new pp.PullPushArrayQueue<number>()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more());\n  [1, 2, 3].forEach(n => q.push(n))\n  console.assert(q.length() === 3, \"q.length() === 3:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  let s = [q.pop()]\n  console.assert(q.length() === 2, \"q.length() === 2:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  console.assert(q.all().toString() === [1, 2].toString(), \"q.all().toString() === [1, 2].toString():\", q.all())\n  console.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\n  q.empty()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more());\n  [1, 2, 3, 4, 5, 6].forEach(n => q.push(n))\n  console.assert(q.all().toString() === [1, 2, 3, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 3, 4, 5, 6].toString():\", q.all())\n  s = q.splice(2, 1)\n  console.assert(q.all().toString() === [1, 2, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 4, 5, 6].toString():\", q.all())\n  console.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\n  s = q.splice(-1)\n  console.assert(q.all().toString() === [1, 2, 4, 5].toString(), \"q.all().toString() === [1, 2, 4, 5].toString():\", q.all())\n  console.assert(s.toString() === [6].toString(), \"s.toString() === [6].toString():\", s)\n  s = q.splice(1)\n  console.assert(q.all().toString() === [1].toString(), \"q.all().toString() === [1].toString():\", q.all())\n  console.assert(s.toString() === [2, 4, 5].toString(), \"s.toString() === [2, 4, 5].toString():\", s)\n  q.unshift(0)\n  console.assert(q.all().toString() === [0, 1].toString(), 'q.all().toString() === [0, 1].toString():', q.all())\n  s = [q.shift()]\n  console.assert(q.all().toString() === [1].toString(), 'q.all().toString() === [1].toString():', q.all())\n  console.assert(s.toString() === [0].toString(), 's.toString() === [0].toString():', s)\n  s = [q.shift()]\n  console.assert(q.all().toString() === [].toString(), 'q.all().toString() === [].toString():', q.all())\n  console.assert(s.toString() === [1].toString(), 's.toString() === [1].toString():', s)\n  s = [q.shift()]\n  console.assert(q.all().toString() === [].toString(), 'q.all().toString() === [].toString():', q.all())\n  console.assert(s.toString() === [].toString(), 's.toString() === [].toString():', s)\n}\nconsole.groupEnd()\n\nconsole.log(\"Test completed.\")"],
  "mappings": "AAAA,YAAY,QAAQ;AAEpB,QAAQ,MAAM,qBAAqB;AACnC,QAAQ,IAAI,cAAc;AAC1B;AACE,QAAM,IAAI,IAAI,GAAG,oBAAoB;AACrC,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,CAAC,EAAE,KAAK,GAAG,cAAc,EAAE,KAAK,CAAC;AAChD,IAAE,KAAK,KAAK;AACZ,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,EAAE,KAAK,GAAG,aAAa,EAAE,KAAK,CAAC;AAC9C,MAAI,IAAI,EAAE,IAAI;AACd,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,EAAE,KAAK,GAAG,aAAa,EAAE,KAAK,CAAC;AAC9C,UAAQ,OAAO,EAAE,IAAI,MAAM,MAAM,qBAAqB,EAAE,IAAI,CAAC;AAC7D,UAAQ,OAAO,MAAM,KAAK,cAAc,CAAC;AACzC,IAAE,MAAM;AACR,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,CAAC,EAAE,KAAK,GAAG,cAAc,EAAE,KAAK,CAAC;AAChD,IAAE,KAAK,QAAQ;AACf,UAAQ,OAAO,EAAE,IAAI,MAAM,UAAU,yBAAyB,EAAE,IAAI,CAAC;AACrE,MAAI,EAAE,OAAO,GAAG,CAAC;AACjB,UAAQ,OAAO,EAAE,IAAI,MAAM,SAAS,wBAAwB,EAAE,IAAI,CAAC;AACnE,UAAQ,OAAO,MAAM,KAAK,cAAc,CAAC;AACzC,MAAI,EAAE,OAAO,EAAE;AACf,UAAQ,OAAO,EAAE,IAAI,MAAM,QAAQ,uBAAuB,EAAE,IAAI,CAAC;AACjE,UAAQ,OAAO,MAAM,KAAK,cAAc,CAAC;AACzC,MAAI,EAAE,OAAO,CAAC;AACd,UAAQ,OAAO,EAAE,IAAI,MAAM,KAAK,oBAAoB,EAAE,IAAI,CAAC;AAC3D,UAAQ,OAAO,MAAM,OAAO,gBAAgB,CAAC;AAC7C,IAAE,QAAQ,GAAG;AACb,UAAQ,OAAO,EAAE,IAAI,MAAM,MAAM,qBAAqB,EAAE,IAAI,CAAC;AAC7D,MAAI,EAAE,MAAM;AACZ,UAAQ,OAAO,EAAE,IAAI,MAAM,KAAK,oBAAoB,EAAE,IAAI,CAAC;AAC3D,UAAQ,OAAO,MAAM,KAAK,cAAc,CAAC;AACzC,MAAI,EAAE,MAAM;AACZ,UAAQ,OAAO,EAAE,IAAI,MAAM,IAAI,mBAAmB,EAAE,IAAI,CAAC;AACzD,UAAQ,OAAO,MAAM,KAAK,cAAc,CAAC;AACzC,MAAI,EAAE,MAAM;AACZ,UAAQ,OAAO,EAAE,IAAI,MAAM,IAAI,mBAAmB,EAAE,IAAI,CAAC;AACzD,UAAQ,OAAO,MAAM,IAAI,aAAa,CAAC;AACzC;AACA,QAAQ,SAAS;AAEjB,QAAQ,MAAM,oBAAoB;AAClC,QAAQ,IAAI,cAAc;AAC1B;AACE,QAAM,IAAI,IAAI,GAAG,mBAA2B;AAC5C,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,CAAC,EAAE,KAAK,GAAG,cAAc,EAAE,KAAK,CAAC;AAChD,GAAC,GAAG,GAAG,CAAC,EAAE,QAAQ,OAAK,EAAE,KAAK,CAAC,CAAC;AAChC,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,EAAE,KAAK,GAAG,aAAa,EAAE,KAAK,CAAC;AAC9C,MAAI,IAAI,CAAC,EAAE,IAAI,CAAC;AAChB,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,EAAE,KAAK,GAAG,aAAa,EAAE,KAAK,CAAC;AAC9C,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,6CAA6C,EAAE,IAAI,CAAC;AAC7G,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,oCAAoC,CAAC;AACrF,IAAE,MAAM;AACR,UAAQ,OAAO,EAAE,OAAO,MAAM,GAAG,qBAAqB,EAAE,OAAO,CAAC;AAChE,UAAQ,OAAO,CAAC,EAAE,KAAK,GAAG,cAAc,EAAE,KAAK,CAAC;AAChD,GAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,QAAQ,OAAK,EAAE,KAAK,CAAC,CAAC;AACzC,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG,yDAAyD,EAAE,IAAI,CAAC;AACrI,MAAI,EAAE,OAAO,GAAG,CAAC;AACjB,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG,sDAAsD,EAAE,IAAI,CAAC;AAC/H,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,oCAAoC,CAAC;AACrF,MAAI,EAAE,OAAO,EAAE;AACf,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG,mDAAmD,EAAE,IAAI,CAAC;AACzH,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,oCAAoC,CAAC;AACrF,MAAI,EAAE,OAAO,CAAC;AACd,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,0CAA0C,EAAE,IAAI,CAAC;AACvG,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG,0CAA0C,CAAC;AACjG,IAAE,QAAQ,CAAC;AACX,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,6CAA6C,EAAE,IAAI,CAAC;AAC7G,MAAI,CAAC,EAAE,MAAM,CAAC;AACd,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,0CAA0C,EAAE,IAAI,CAAC;AACvG,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,oCAAoC,CAAC;AACrF,MAAI,CAAC,EAAE,MAAM,CAAC;AACd,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS,GAAG,yCAAyC,EAAE,IAAI,CAAC;AACrG,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,oCAAoC,CAAC;AACrF,MAAI,CAAC,EAAE,MAAM,CAAC;AACd,UAAQ,OAAO,EAAE,IAAI,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS,GAAG,yCAAyC,EAAE,IAAI,CAAC;AACrG,UAAQ,OAAO,EAAE,SAAS,MAAM,CAAC,EAAE,SAAS,GAAG,mCAAmC,CAAC;AACrF;AACA,QAAQ,SAAS;AAEjB,QAAQ,IAAI,iBAAiB;",
  "names": []
}
