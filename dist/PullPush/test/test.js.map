{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import * as pp from \"../PullPush.ts\"\n\n{\n  console.group(\"PullPushStringQueue\")\n  const q = new pp.PullPushStringQueue()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more())\n  q.push(\"123\")\n  console.assert(q.length() === 3, \"q.length() === 3:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  let s = q.pop()\n  console.assert(q.length() === 2, \"q.length() === 2:\", q.length())\n  console.assert(q.more(), \"q.more():\", q.more())\n  console.assert(q.all() === \"12\", 'q.all() === \"12\":', q.all())\n  console.assert(s === \"3\", 's === \"3\":', s)\n  q.empty()\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\n  console.assert(!q.more(), \"!q.more():\", q.more())\n  q.push(\"123456\")\n  console.assert(q.all() === \"123456\", 'q.all() === \"123456\":', q.all())\n  s = q.splice(2, 1)\n  console.assert(q.all() === \"12456\", 'q.all() === \"12456\":', q.all())\n  console.assert(s === \"3\", 's === \"3\":', s)\n  s = q.splice(-1)\n  console.assert(q.all() === \"1245\", 'q.all() === \"1245\":', q.all())\n  console.assert(s === \"6\", 's === \"6\":', s)\n  s = q.splice(1)\n  console.assert(q.all() === \"1\", 'q.all() === \"1\":', q.all())\n  console.assert(s === \"245\", 's === \"245\":', s)\n  console.groupEnd()\n}\n\nconsole.group(\"PullPushArrayQueue\")\nconst q = new pp.PullPushArrayQueue<number>()\nconsole.assert(q.length() === 0, \"q.length() === 0:\", q.length())\nconsole.assert(!q.more(), \"!q.more():\", q.more());\n[1, 2, 3].forEach(n => q.push(n))\nconsole.assert(q.length() === 3, \"q.length() === 3:\", q.length())\nconsole.assert(q.more(), \"q.more():\", q.more())\nlet s = [q.pop()]\nconsole.assert(q.length() === 2, \"q.length() === 2:\", q.length())\nconsole.assert(q.more(), \"q.more():\", q.more())\nconsole.assert(q.all().toString() === [1, 2].toString(), \"q.all().toString() === [1, 2].toString():\", q.all())\nconsole.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\nq.empty()\nconsole.assert(q.length() === 0, \"q.length() === 0:\", q.length())\nconsole.assert(!q.more(), \"!q.more():\", q.more());\n[1, 2, 3, 4, 5, 6].forEach(n => q.push(n))\nconsole.assert(q.all().toString() === [1, 2, 3, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 3, 4, 5, 6].toString():\", q.all())\ns = q.splice(2, 1)\nconsole.assert(q.all().toString() === [1, 2, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 4, 5, 6].toString():\", q.all())\nconsole.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\ns = q.splice(-1)\nconsole.assert(q.all().toString() === [1, 2, 4, 5].toString(), \"q.all().toString() === [1, 2, 4, 5].toString():\", q.all())\nconsole.assert(s.toString() === [6].toString(), \"s.toString() === [6].toString():\", s)\ns = q.splice(1)\nconsole.assert(q.all().toString() === [1].toString(), \"q.all().toString() === [1].toString():\", q.all())\nconsole.assert(s.toString() === [2, 4, 5].toString(), \"s.toString() === [2, 4, 5].toString():\", s)\nconsole.groupEnd()"],
  "mappings": "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",
  "names": ["pp", "q", "s", "n"]
}
