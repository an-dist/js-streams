{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import * as pp from \"../PullPush.ts\"\r\n\r\n{\r\n  console.group(\"PullPushStringQueue\")\r\n  const q = new pp.PullPushStringQueue()\r\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\r\n  console.assert(!q.more(), \"!q.more():\", q.more())\r\n  q.push(\"123\")\r\n  console.assert(q.length() === 3, \"q.length() === 3:\", q.length())\r\n  console.assert(q.more(), \"q.more():\", q.more())\r\n  let s = q.pop()\r\n  console.assert(q.length() === 2, \"q.length() === 2:\", q.length())\r\n  console.assert(q.more(), \"q.more():\", q.more())\r\n  console.assert(q.all() === \"12\", 'q.all() === \"12\":', q.all())\r\n  console.assert(s === \"3\", 's === \"3\":', s)\r\n  q.empty()\r\n  console.assert(q.length() === 0, \"q.length() === 0:\", q.length())\r\n  console.assert(!q.more(), \"!q.more():\", q.more())\r\n  q.push(\"123456\")\r\n  console.assert(q.all() === \"123456\", 'q.all() === \"123456\":', q.all())\r\n  s = q.splice(2, 1)\r\n  console.assert(q.all() === \"12456\", 'q.all() === \"12456\":', q.all())\r\n  console.assert(s === \"3\", 's === \"3\":', s)\r\n  s = q.splice(-1)\r\n  console.assert(q.all() === \"1245\", 'q.all() === \"1245\":', q.all())\r\n  console.assert(s === \"6\", 's === \"6\":', s)\r\n  s = q.splice(1)\r\n  console.assert(q.all() === \"1\", 'q.all() === \"1\":', q.all())\r\n  console.assert(s === \"245\", 's === \"245\":', s)\r\n  console.groupEnd()\r\n}\r\n\r\nconsole.group(\"PullPushArrayQueue\")\r\nconst q = new pp.PullPushArrayQueue<number>()\r\nconsole.assert(q.length() === 0, \"q.length() === 0:\", q.length())\r\nconsole.assert(!q.more(), \"!q.more():\", q.more());\r\n[1, 2, 3].forEach(n => q.push(n))\r\nconsole.assert(q.length() === 3, \"q.length() === 3:\", q.length())\r\nconsole.assert(q.more(), \"q.more():\", q.more())\r\nlet s = [q.pop()]\r\nconsole.assert(q.length() === 2, \"q.length() === 2:\", q.length())\r\nconsole.assert(q.more(), \"q.more():\", q.more())\r\nconsole.assert(q.all().toString() === [1, 2].toString(), \"q.all().toString() === [1, 2].toString():\", q.all())\r\nconsole.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\r\nq.empty()\r\nconsole.assert(q.length() === 0, \"q.length() === 0:\", q.length())\r\nconsole.assert(!q.more(), \"!q.more():\", q.more());\r\n[1, 2, 3, 4, 5, 6].forEach(n => q.push(n))\r\nconsole.assert(q.all().toString() === [1, 2, 3, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 3, 4, 5, 6].toString():\", q.all())\r\ns = q.splice(2, 1)\r\nconsole.assert(q.all().toString() === [1, 2, 4, 5, 6].toString(), \"q.all().toString() === [1, 2, 4, 5, 6].toString():\", q.all())\r\nconsole.assert(s.toString() === [3].toString(), \"s.toString() === [3].toString():\", s)\r\ns = q.splice(-1)\r\nconsole.assert(q.all().toString() === [1, 2, 4, 5].toString(), \"q.all().toString() === [1, 2, 4, 5].toString():\", q.all())\r\nconsole.assert(s.toString() === [6].toString(), \"s.toString() === [6].toString():\", s)\r\ns = q.splice(1)\r\nconsole.assert(q.all().toString() === [1].toString(), \"q.all().toString() === [1].toString():\", q.all())\r\nconsole.assert(s.toString() === [2, 4, 5].toString(), \"s.toString() === [2, 4, 5].toString():\", s)\r\nconsole.groupEnd()"],
  "mappings": "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",
  "names": ["q", "s"]
}
