{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { PeekStream } from \"../PeekStream.ts\"\r\n\r\nconst source = (data: any[]) => new ReadableStream({\r\n  start(controller) {\r\n    for (const chunk of data) {\r\n      controller.enqueue(chunk)\r\n    }\r\n    controller.close()\r\n  }\r\n})\r\n\r\nconst logging = () => new PeekStream((chunk, index) => {\r\n  console.log(index, chunk)\r\n})\r\n\r\nconst terminate = () => new WritableStream\r\n\r\nconst data = [\r\n  [1, 2, 3],\r\n  [1, 2, 3, 4, 5, 6],\r\n  [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n]\r\n\r\nawait source(data)\r\n  .pipeThrough(logging())\r\n  .pipeTo(terminate())\r\n\r\nconsole.log(\"Test completed.\")"],
  "mappings": "AAAA,SAAS,kBAAkB;AAE3B,MAAM,SAAS,CAACA,UAAgB,IAAI,eAAe;AAAA,EACjD,MAAM,YAAY;AAChB,eAAW,SAASA,OAAM;AACxB,iBAAW,QAAQ,KAAK;AAAA,IAC1B;AACA,eAAW,MAAM;AAAA,EACnB;AACF,CAAC;AAED,MAAM,UAAU,MAAM,IAAI,WAAW,CAAC,OAAO,UAAU;AACrD,UAAQ,IAAI,OAAO,KAAK;AAC1B,CAAC;AAED,MAAM,YAAY,MAAM,IAAI;AAE5B,MAAM,OAAO;AAAA,EACX,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,EACjB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5B;AAEA,MAAM,OAAO,IAAI,EACd,YAAY,QAAQ,CAAC,EACrB,OAAO,UAAU,CAAC;AAErB,QAAQ,IAAI,iBAAiB;",
  "names": ["data"]
}
