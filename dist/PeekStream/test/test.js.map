{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { PeekStream } from \"../PeekStream.ts\"\n\nconst source = (data: any[]) => new ReadableStream({\n  start(controller) {\n    for (const chunk of data) {\n      controller.enqueue(chunk)\n    }\n    controller.close()\n  }\n})\n\nconst logging = () => new PeekStream((chunk, index) => {\n  console.log(index, chunk)\n})\n\nconst terminate = () => new WritableStream\n\nconst data = [\n  [1, 2, 3],\n  [1, 2, 3, 4, 5, 6],\n  [1, 2, 3, 4, 5, 6, 7, 8, 9],\n]\n\nawait source(data)\n  .pipeThrough(logging())\n  .pipeTo(terminate())\n\nconsole.log(\"Test completed.\")"],
  "mappings": ";AAAA,SAAS,kBAAkB;AAE3B,MAAM,SAAS,CAACA,UAAgB,IAAI,eAAe;AAAA,EACjD,MAAM,YAAY;AAChB,eAAW,SAASA,OAAM;AACxB,iBAAW,QAAQ,KAAK;AAAA,IAC1B;AACA,eAAW,MAAM;AAAA,EACnB;AACF,CAAC;AAED,MAAM,UAAU,MAAM,IAAI,WAAW,CAAC,OAAO,UAAU;AACrD,UAAQ,IAAI,OAAO,KAAK;AAC1B,CAAC;AAED,MAAM,YAAY,MAAM,IAAI;AAE5B,MAAM,OAAO;AAAA,EACX,CAAC,GAAG,GAAG,CAAC;AAAA,EACR,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,EACjB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5B;AAEA,MAAM,OAAO,IAAI,EACd,YAAY,QAAQ,CAAC,EACrB,OAAO,UAAU,CAAC;AAErB,QAAQ,IAAI,iBAAiB;",
  "names": ["data"]
}
