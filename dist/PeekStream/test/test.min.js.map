{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { PeekStream } from \"../PeekStream.ts\"\n\nconst source = (data: any[]) => new ReadableStream({\n  start(controller) {\n    for (const chunk of data) {\n      controller.enqueue(chunk)\n    }\n    controller.close()\n  }\n})\n\nconst logging = () => new PeekStream((chunk, index) => {\n  console.log(index, chunk)\n})\n\nconst terminate = () => new WritableStream\n\nconst data = [\n  [1, 2, 3],\n  [1, 2, 3, 4, 5, 6],\n  [1, 2, 3, 4, 5, 6, 7, 8, 9],\n]\n\nawait source(data)\n  .pipeThrough(logging())\n  .pipeTo(terminate())\n\nconsole.log(\"Test completed.\")"],
  "mappings": "aAAA,OAAS,cAAAA,MAAkB,mBAE3B,MAAMC,EAAUC,GAAgB,IAAI,eAAe,CACjD,MAAMC,EAAY,CAChB,UAAWC,KAASF,EAClBC,EAAW,QAAQC,CAAK,EAE1BD,EAAW,MAAM,CACnB,CACF,CAAC,EAEKE,EAAU,IAAM,IAAIL,EAAW,CAACI,EAAOE,IAAU,CACrD,QAAQ,IAAIA,EAAOF,CAAK,CAC1B,CAAC,EAEKG,EAAY,IAAM,IAAI,eAEtBL,EAAO,CACX,CAAC,EAAG,EAAG,CAAC,EACR,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACjB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAC5B,EAEA,MAAMD,EAAOC,CAAI,EACd,YAAYG,EAAQ,CAAC,EACrB,OAAOE,EAAU,CAAC,EAErB,QAAQ,IAAI,iBAAiB",
  "names": ["PeekStream", "source", "data", "controller", "chunk", "logging", "index", "terminate"]
}
