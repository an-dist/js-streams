{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { CombinedTransformStream } from \"./CombinedTransformStream.ts\"\n\nconst source = () => new ReadableStream({\n  start(controller) {\n    for (const n of [1, 2, 3, 4, 5]) {\n      controller.enqueue(n)\n    }\n    controller.close()\n  }\n})\n\nconst terminate = () => new WritableStream({\n  write(chunk) {\n    console.log(`writed: ${chunk}`)\n    console.groupEnd()\n  }\n})\n\nconst grouping = () => new TransformStream({\n  transform(chunk, controller) {\n    console.group(`chunk=${chunk}`)\n    controller.enqueue(chunk)\n  }\n})\n\nconst transform = (name: string) => new TransformStream({\n  transform(chunk, controller) {\n    console.log(`chunk=${chunk}, name=${name}`)\n    controller.enqueue(chunk)\n  }\n})\n\nawait source()\n  .pipeThrough(grouping())\n  .pipeThrough(new CombinedTransformStream([\n    transform(\"transform 1\"),\n    transform(\"transform 2\"),\n    transform(\"transform 3\"),\n  ]))\n  .pipeTo(terminate())"],
  "mappings": "AAAA,SAAS,+BAA+B;AAExC,MAAM,SAAS,MAAM,IAAI,eAAe;AAAA,EACtC,MAAM,YAAY;AAChB,eAAW,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG;AAC/B,iBAAW,QAAQ,CAAC;AAAA,IACtB;AACA,eAAW,MAAM;AAAA,EACnB;AACF,CAAC;AAED,MAAM,YAAY,MAAM,IAAI,eAAe;AAAA,EACzC,MAAM,OAAO;AACX,YAAQ,IAAI,WAAW,KAAK,EAAE;AAC9B,YAAQ,SAAS;AAAA,EACnB;AACF,CAAC;AAED,MAAM,WAAW,MAAM,IAAI,gBAAgB;AAAA,EACzC,UAAU,OAAO,YAAY;AAC3B,YAAQ,MAAM,SAAS,KAAK,EAAE;AAC9B,eAAW,QAAQ,KAAK;AAAA,EAC1B;AACF,CAAC;AAED,MAAM,YAAY,CAAC,SAAiB,IAAI,gBAAgB;AAAA,EACtD,UAAU,OAAO,YAAY;AAC3B,YAAQ,IAAI,SAAS,KAAK,UAAU,IAAI,EAAE;AAC1C,eAAW,QAAQ,KAAK;AAAA,EAC1B;AACF,CAAC;AAED,MAAM,OAAO,EACV,YAAY,SAAS,CAAC,EACtB,YAAY,IAAI,wBAAwB;AAAA,EACvC,UAAU,aAAa;AAAA,EACvB,UAAU,aAAa;AAAA,EACvB,UAAU,aAAa;AACzB,CAAC,CAAC,EACD,OAAO,UAAU,CAAC;",
  "names": []
}
