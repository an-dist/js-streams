{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { CombinedTransformStream } from \"../CombinedTransformStream.ts\"\n\n(async () => {\n\n  const source = () => new ReadableStream({\n    start(controller) {\n      for (const n of [1, 2, 3, 4, 5]) {\n        controller.enqueue(n)\n      }\n      controller.close()\n    }\n  })\n\n  const terminate = () => new WritableStream({\n    write(chunk) {\n      console.log(`writed: ${chunk}`)\n      console.groupEnd()\n    }\n  })\n\n  const grouping = () => new TransformStream({\n    transform(chunk, controller) {\n      console.group(`chunk=${chunk}`)\n      controller.enqueue(chunk)\n    }\n  })\n\n  const transform = (name: string) => new TransformStream({\n    transform(chunk, controller) {\n      console.log(`chunk=${chunk}, name=${name}`)\n      controller.enqueue(chunk)\n    }\n  })\n\n  await source()\n    .pipeThrough(grouping())\n    .pipeThrough(new CombinedTransformStream([\n      transform(\"transform 1\"),\n      transform(\"transform 2\"),\n      transform(\"transform 3\"),\n    ]))\n    .pipeTo(terminate())\n\n})()"],
  "mappings": "aAAA,OAAS,2BAAAA,MAA+B,iCAEvC,SAAY,CAEX,MAAMC,EAAS,IAAM,IAAI,eAAe,CACtC,MAAMC,EAAY,CAChB,UAAWC,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAC5BD,EAAW,QAAQC,CAAC,EAEtBD,EAAW,MAAM,CACnB,CACF,CAAC,EAEKE,EAAY,IAAM,IAAI,eAAe,CACzC,MAAMC,EAAO,CACX,QAAQ,IAAI,WAAWA,CAAK,EAAE,EAC9B,QAAQ,SAAS,CACnB,CACF,CAAC,EAEKC,EAAW,IAAM,IAAI,gBAAgB,CACzC,UAAUD,EAAOH,EAAY,CAC3B,QAAQ,MAAM,SAASG,CAAK,EAAE,EAC9BH,EAAW,QAAQG,CAAK,CAC1B,CACF,CAAC,EAEKE,EAAaC,GAAiB,IAAI,gBAAgB,CACtD,UAAUH,EAAOH,EAAY,CAC3B,QAAQ,IAAI,SAASG,CAAK,UAAUG,CAAI,EAAE,EAC1CN,EAAW,QAAQG,CAAK,CAC1B,CACF,CAAC,EAED,MAAMJ,EAAO,EACV,YAAYK,EAAS,CAAC,EACtB,YAAY,IAAIN,EAAwB,CACvCO,EAAU,aAAa,EACvBA,EAAU,aAAa,EACvBA,EAAU,aAAa,CACzB,CAAC,CAAC,EACD,OAAOH,EAAU,CAAC,CAEvB,GAAG",
  "names": ["CombinedTransformStream", "source", "controller", "n", "terminate", "chunk", "grouping", "transform", "name"]
}
