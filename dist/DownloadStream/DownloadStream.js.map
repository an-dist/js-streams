{
  "version": 3,
  "sources": ["DownloadStream.ts"],
  "sourcesContent": ["/*!\r\nMIT No Attribution\r\n\r\nCopyright 2024 an(https://github.com/an-dist)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\r\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\r\nwithout restriction, including without limitation the rights to use, copy, modify,\r\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nexport interface DownloadStreamOptions {\r\n  mode?: \"blob\" | \"filesystem\"\r\n  linkHolder?: Node\r\n}\r\n\r\nexport class DownloadStream extends WritableStream {\r\n  constructor(name: string, options?: DownloadStreamOptions) {\r\n    const download = (blob: Blob) => {\r\n      const url = URL.createObjectURL(blob)\r\n      const trigger = document.createElement(\"a\")\r\n      trigger.href = url\r\n      trigger.target = \"_blank\"\r\n      trigger.download = name\r\n      trigger.innerText = name\r\n      if (options?.linkHolder) {\r\n        options.linkHolder.appendChild(trigger)\r\n      }\r\n      else {\r\n        trigger.click()\r\n        trigger.remove()\r\n        setTimeout(() => URL.revokeObjectURL(url), 10 * 1000)\r\n      }\r\n    }\r\n\r\n    if (options?.mode === \"filesystem\") {\r\n      let directory: FileSystemDirectoryHandle\r\n      let handle: FileSystemFileHandle\r\n      let fileStream: FileSystemWritableFileStream\r\n      super({\r\n        async start() {\r\n          directory = await navigator.storage.getDirectory()\r\n          handle = await directory.getFileHandle(name, { create: true })\r\n          fileStream = await handle.createWritable()\r\n        },\r\n        async write(chunk) {\r\n          await fileStream.write(chunk)\r\n        },\r\n        async close() {\r\n          await fileStream.close();\r\n          const file = await handle.getFile()\r\n          download(file)\r\n        },\r\n        async abort(reason) {\r\n          fileStream.abort(reason)\r\n          await directory.removeEntry(name)\r\n        }\r\n      })\r\n    }\r\n\r\n    else {\r\n      let chunks: any[]\r\n      super({\r\n        start() {\r\n          chunks = []\r\n        },\r\n        write(chunk) {\r\n          chunks.push(chunk)\r\n        },\r\n        close() {\r\n          const blob = new Blob(chunks)\r\n          download(blob)\r\n        },\r\n        abort() {\r\n          chunks = []\r\n        }\r\n      })\r\n    }\r\n  }\r\n}"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBO,MAAM,uBAAuB,eAAe;AAAA,EACjD,YAAY,MAAc,SAAiC;AACzD,UAAM,WAAW,CAAC,SAAe;AAC/B,YAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,YAAM,UAAU,SAAS,cAAc,GAAG;AAC1C,cAAQ,OAAO;AACf,cAAQ,SAAS;AACjB,cAAQ,WAAW;AACnB,cAAQ,YAAY;AACpB,UAAI,SAAS,YAAY;AACvB,gBAAQ,WAAW,YAAY,OAAO;AAAA,MACxC,OACK;AACH,gBAAQ,MAAM;AACd,gBAAQ,OAAO;AACf,mBAAW,MAAM,IAAI,gBAAgB,GAAG,GAAG,KAAK,GAAI;AAAA,MACtD;AAAA,IACF;AAEA,QAAI,SAAS,SAAS,cAAc;AAClC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,YAAM;AAAA,QACJ,MAAM,QAAQ;AACZ,sBAAY,MAAM,UAAU,QAAQ,aAAa;AACjD,mBAAS,MAAM,UAAU,cAAc,MAAM,EAAE,QAAQ,KAAK,CAAC;AAC7D,uBAAa,MAAM,OAAO,eAAe;AAAA,QAC3C;AAAA,QACA,MAAM,MAAM,OAAO;AACjB,gBAAM,WAAW,MAAM,KAAK;AAAA,QAC9B;AAAA,QACA,MAAM,QAAQ;AACZ,gBAAM,WAAW,MAAM;AACvB,gBAAM,OAAO,MAAM,OAAO,QAAQ;AAClC,mBAAS,IAAI;AAAA,QACf;AAAA,QACA,MAAM,MAAM,QAAQ;AAClB,qBAAW,MAAM,MAAM;AACvB,gBAAM,UAAU,YAAY,IAAI;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH,OAEK;AACH,UAAI;AACJ,YAAM;AAAA,QACJ,QAAQ;AACN,mBAAS,CAAC;AAAA,QACZ;AAAA,QACA,MAAM,OAAO;AACX,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,QACA,QAAQ;AACN,gBAAM,OAAO,IAAI,KAAK,MAAM;AAC5B,mBAAS,IAAI;AAAA,QACf;AAAA,QACA,QAAQ;AACN,mBAAS,CAAC;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
