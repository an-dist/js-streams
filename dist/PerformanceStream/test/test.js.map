{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { PerformanceStreamBuilder } from \"../PerformanceStream.ts\"\nimport { sleep } from \"../../funcs/sleep/sleep.ts\"\n\nconst source = () => new ReadableStream({\n  start(controller) {\n    for (const n of [1, 2, 3, 4, 5]) {\n      controller.enqueue(n)\n    }\n    controller.close()\n  }\n})\n\nconst terminate = () => new WritableStream({\n  write(chunk) {\n    console.log(`writed: ${chunk}`)\n    console.groupEnd()\n  }\n})\n\nconst grouping = () => new TransformStream({\n  transform(chunk, controller) {\n    console.group(`chunk=${chunk}`)\n    controller.enqueue(chunk)\n  }\n})\n\nconst transform = (name: string) => new TransformStream({\n  async transform(chunk, controller) {\n    console.log(`chunk=${chunk}, name=${name}`)\n    await sleep(100)\n    controller.enqueue(chunk)\n  }\n})\n\nconst builder = new PerformanceStreamBuilder(\"perf\", \"start\", \"end\")\n\nawait source()\n  .pipeThrough(grouping())\n  .pipeThrough(builder\n    .pipe(transform(\"transform 1\"))\n    .pipe(transform(\"transform 2\"))\n    .pipe(transform(\"transform 3\"))\n    .build())\n  .pipeTo(terminate())\n\nconsole.table(builder.result())"],
  "mappings": ";AAAA,SAAS,gCAAgC;AACzC,SAAS,aAAa;AAEtB,MAAM,SAAS,MAAM,IAAI,eAAe;AAAA,EACtC,MAAM,YAAY;AAChB,eAAW,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG;AAC/B,iBAAW,QAAQ,CAAC;AAAA,IACtB;AACA,eAAW,MAAM;AAAA,EACnB;AACF,CAAC;AAED,MAAM,YAAY,MAAM,IAAI,eAAe;AAAA,EACzC,MAAM,OAAO;AACX,YAAQ,IAAI,WAAW,KAAK,EAAE;AAC9B,YAAQ,SAAS;AAAA,EACnB;AACF,CAAC;AAED,MAAM,WAAW,MAAM,IAAI,gBAAgB;AAAA,EACzC,UAAU,OAAO,YAAY;AAC3B,YAAQ,MAAM,SAAS,KAAK,EAAE;AAC9B,eAAW,QAAQ,KAAK;AAAA,EAC1B;AACF,CAAC;AAED,MAAM,YAAY,CAAC,SAAiB,IAAI,gBAAgB;AAAA,EACtD,MAAM,UAAU,OAAO,YAAY;AACjC,YAAQ,IAAI,SAAS,KAAK,UAAU,IAAI,EAAE;AAC1C,UAAM,MAAM,GAAG;AACf,eAAW,QAAQ,KAAK;AAAA,EAC1B;AACF,CAAC;AAED,MAAM,UAAU,IAAI,yBAAyB,QAAQ,SAAS,KAAK;AAEnE,MAAM,OAAO,EACV,YAAY,SAAS,CAAC,EACtB,YAAY,QACV,KAAK,UAAU,aAAa,CAAC,EAC7B,KAAK,UAAU,aAAa,CAAC,EAC7B,KAAK,UAAU,aAAa,CAAC,EAC7B,MAAM,CAAC,EACT,OAAO,UAAU,CAAC;AAErB,QAAQ,MAAM,QAAQ,OAAO,CAAC;",
  "names": []
}
