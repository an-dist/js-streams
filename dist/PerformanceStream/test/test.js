"use strict";import{PerformanceStreamBuilder as p}from"../PerformanceStream.js";import{CompatiblePerformance as i}from"../../misc/CompatiblePerformance/CompatiblePerformance.js";import{sleep as c}from"../../funcs/sleep/sleep.js";(async()=>{i.replaceIfUnsupported();const t=()=>new ReadableStream({start(e){for(const r of[1,2,3,4,5])e.enqueue(r);e.close()}}),a=()=>new WritableStream({write(e){console.log(`writed: ${e}`),console.groupEnd()}}),s=()=>new TransformStream({transform(e,r){console.group(`chunk=${e}`),r.enqueue(e)}}),o=e=>new TransformStream({async transform(r,m){console.log(`chunk=${r}, name=${e}`),await c(100),m.enqueue(r)}}),n=new p("perf","start","end");await t().pipeThrough(s()).pipeThrough(n.pipe(o("transform 1")).pipe(o("transform 2")).pipe(o("transform 3")).build()).pipeTo(a()),console.table(n.result())})();
//# sourceMappingURL=test.js.map
