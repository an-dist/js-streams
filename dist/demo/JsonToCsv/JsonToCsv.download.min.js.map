{
  "version": 3,
  "sources": ["JsonToCsv.download.ts"],
  "sourcesContent": ["import * as streams from \"/web.ts\"\n\nconst chkDirect = document.getElementById(\"chkDirect\") as HTMLInputElement\nconst rdoInputFormatJSONL = document.getElementById(\"rdoInputFormatJSONL\") as HTMLInputElement\nconst rdoInputFormatJSONC = document.getElementById(\"rdoInputFormatJSONC\") as HTMLInputElement\nconst rdoOutputFormatCSV = document.getElementById(\"rdoOutputFormatCSV\") as HTMLInputElement\nconst txtUrl = document.getElementById(\"txtUrl\") as HTMLInputElement\nconst btnConvertUrl = document.getElementById(\"btnConvertUrl\") as HTMLButtonElement\nconst linkHolder = btnConvertUrl.parentElement!.lastElementChild as HTMLDivElement\n\nbtnConvertUrl.onclick = () => {\n  fetch(txtUrl.value, { credentials: \"include\" }).then(async response => {\n    if (!response.ok) {\n      console.warn(`${txtUrl.value} responded status code ${response.status}.`, await response.text())\n      return\n    }\n\n    let downloadStreamOptions: streams.DownloadStreamOptions | undefined\n    if (!chkDirect.checked) {\n      downloadStreamOptions = {\n        linkHolder,\n      }\n    }\n\n    const jsonDeserializeOptions = {\n      lineSeparated: rdoInputFormatJSONL.checked,\n      withComments: rdoInputFormatJSONC.checked,\n    }\n\n    const csvLineEncoderOptions = {\n      delimiter: rdoOutputFormatCSV.checked\n        ? \",\"\n        : \"\\t\",\n      withNewLine: true,\n    }\n\n    const downloadName = rdoOutputFormatCSV.checked\n      ? \"download.csv\"\n      : \"download.tsv\"\n\n    response.body!\n      .pipeThrough(new streams.Utf8DecoderStream())\n      .pipeThrough(new streams.JsonDeserializer(jsonDeserializeOptions).transform())\n      .pipeThrough(new streams.CsvLineEncoder(csvLineEncoderOptions).transform())\n      .pipeTo(new streams.DownloadStream(downloadName, downloadStreamOptions))\n  })\n}"],
  "mappings": "AAAA,UAAYA,MAAa,UAEzB,MAAMC,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAsB,SAAS,eAAe,qBAAqB,EACnEC,EAAsB,SAAS,eAAe,qBAAqB,EACnEC,EAAqB,SAAS,eAAe,oBAAoB,EACjEC,EAAS,SAAS,eAAe,QAAQ,EACzCC,EAAgB,SAAS,eAAe,eAAe,EACvDC,EAAaD,EAAc,cAAe,iBAEhDA,EAAc,QAAU,IAAM,CAC5B,MAAMD,EAAO,MAAO,CAAE,YAAa,SAAU,CAAC,EAAE,KAAK,MAAMG,GAAY,CACrE,GAAI,CAACA,EAAS,GAAI,CAChB,QAAQ,KAAK,GAAGH,EAAO,KAAK,0BAA0BG,EAAS,MAAM,IAAK,MAAMA,EAAS,KAAK,CAAC,EAC/F,MACF,CAEA,IAAIC,EACCR,EAAU,UACbQ,EAAwB,CACtB,WAAAF,CACF,GAGF,MAAMG,EAAyB,CAC7B,cAAeR,EAAoB,QACnC,aAAcC,EAAoB,OACpC,EAEMQ,EAAwB,CAC5B,UAAWP,EAAmB,QAC1B,IACA,IACJ,YAAa,EACf,EAEMQ,EAAeR,EAAmB,QACpC,eACA,eAEJI,EAAS,KACN,YAAY,IAAIR,EAAQ,iBAAmB,EAC3C,YAAY,IAAIA,EAAQ,iBAAiBU,CAAsB,EAAE,UAAU,CAAC,EAC5E,YAAY,IAAIV,EAAQ,eAAeW,CAAqB,EAAE,UAAU,CAAC,EACzE,OAAO,IAAIX,EAAQ,eAAeY,EAAcH,CAAqB,CAAC,CAC3E,CAAC,CACH",
  "names": ["streams", "chkDirect", "rdoInputFormatJSONL", "rdoInputFormatJSONC", "rdoOutputFormatCSV", "txtUrl", "btnConvertUrl", "linkHolder", "response", "downloadStreamOptions", "jsonDeserializeOptions", "csvLineEncoderOptions", "downloadName"]
}
