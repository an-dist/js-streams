{
  "version": 3,
  "sources": ["PngToBase64.ts"],
  "sourcesContent": ["// @ts-ignore\nimport * as streams from \"/web.ts\"\n\nglobalThis.console = new streams.DomConsole(\"console\", globalThis.console)\n\nconst txtFile = document.getElementById(\"txtFile\") as HTMLInputElement\nconst txtResult = document.getElementById(\"txtResult\") as HTMLTextAreaElement\nconst imgResult = document.getElementById(\"imgResult\") as HTMLImageElement\n\ntxtFile.onchange = async () => {\n  if (!txtFile.files || txtFile.files.length === 0) {\n    return\n  }\n\n  let base64 = \"\"\n\n  await txtFile.files[0].stream()\n    .pipeThrough(new streams.BaseEncoder(\"base64\").transformable())\n    .pipeTo(new WritableStream({\n      write(chunk) {\n        base64 += chunk\n      }\n    }))\n\n  txtResult.value = base64\n  txtResult.dispatchEvent(new Event(\"input\"))\n}\n\ntxtResult.oninput = () => {\n  imgResult.src = `data:image/png;base64,${txtResult.value}`\n}"],
  "mappings": "AACA,UAAYA,MAAa,UAEzB,WAAW,QAAU,IAAIA,EAAQ,WAAW,UAAW,WAAW,OAAO,EAEzE,MAAMC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAY,SAAS,eAAe,WAAW,EAErDF,EAAQ,SAAW,SAAY,CAC7B,GAAI,CAACA,EAAQ,OAASA,EAAQ,MAAM,SAAW,EAC7C,OAGF,IAAIG,EAAS,GAEb,MAAMH,EAAQ,MAAM,CAAC,EAAE,OAAO,EAC3B,YAAY,IAAID,EAAQ,YAAY,QAAQ,EAAE,cAAc,CAAC,EAC7D,OAAO,IAAI,eAAe,CACzB,MAAMK,EAAO,CACXD,GAAUC,CACZ,CACF,CAAC,CAAC,EAEJH,EAAU,MAAQE,EAClBF,EAAU,cAAc,IAAI,MAAM,OAAO,CAAC,CAC5C,EAEAA,EAAU,QAAU,IAAM,CACxBC,EAAU,IAAM,yBAAyBD,EAAU,KAAK,EAC1D",
  "names": ["streams", "txtFile", "txtResult", "imgResult", "base64", "chunk"]
}
