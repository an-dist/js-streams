import*as o from"/web.min.js";globalThis.console=new o.DomConsole("console",globalThis.console);const g=document.getElementById("rdoInputFormatTSV"),l=document.getElementById("txtFile"),n=document.getElementById("tblResult");let e;l.onchange=async()=>{if((!e||!e.signal.aborted)&&(e?.abort(),e=new AbortController),n.innerHTML="",n.createTBody(),!l.files||l.files.length===0)return;const c=l.files[0].stream().pipeThrough(new o.Utf8DecoderStream,{signal:e.signal}).pipeThrough(new o.CsvDeserializer({hasHeader:!0,delimitor:g.checked?"	":","}).transformable(),{signal:e.signal});let d=1;for await(const r of o.toAsyncIterableIterator(c,{signal:e.signal})){if(!n.tHead){const i=n.createTHead().insertRow();let t=document.createElement("th");t.textContent="#",i.append(t);for(const m in r)t=document.createElement("th"),t.textContent=m,i.append(t)}const s=n.tBodies[0].insertRow();s.insertCell().textContent=(d++).toLocaleString();for(const a of Object.values(r))s.insertCell().textContent=a?.toString()??"",await o.sleep(0)}};
//# sourceMappingURL=CsvViewer.min.js.map
