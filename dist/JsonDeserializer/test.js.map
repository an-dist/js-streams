{
  "version": 3,
  "sources": ["test.ts"],
  "sourcesContent": ["import { JsonDeserializer, JsonDeserializerOptions } from \"./JsonDeserializer.ts\"\nimport { sleep } from \"../funcs/sleep/sleep.ts\"\n\nconst source = (s: string) => new ReadableStream({\n  start(controller) {\n    controller.enqueue(s)\n    controller.close()\n  }\n})\n\nconst logging = () => new WritableStream({\n  write(chunk) {\n    console.log(chunk)\n  }\n})\n\nconst terminate = () => new WritableStream()\n\nconst time = async (fn: () => Promise<void>) => {\n  performance.clearMarks(\"start\")\n  performance.clearMarks(\"end\")\n  performance.clearMeasures(\"perf\")\n\n  performance.mark(\"start\")\n  await fn()\n  performance.mark(\"end\")\n  performance.measure(\"perf\", \"start\", \"end\")\n  const perf = performance.getEntriesByName(\"perf\")[0]\n  console.log(perf.duration)\n}\n\nconst deserializer = async (options?: JsonDeserializerOptions, native?: boolean) => native\n  ? (await new JsonDeserializer(options).nativization()).transform()\n  : new JsonDeserializer(options).transform()\n\nconst test = async (native: boolean) => {\n  console.group(\"JSON\")\n  {\n    const json = '[{\"a\":1,\"b\":2},{\"a\":3,\"b\":4},{\"a\":5,\"b\":6}]'\n    await source(json)\n      .pipeThrough(await deserializer(undefined, native))\n      .pipeTo(logging())\n  }\n  console.groupEnd()\n\n  console.group(\"JSON Lines\")\n  {\n    const jsonl = '{\"a\":1,\"b\":2}\\n{\"a\":3,\"b\":4}\\n{\"a\":5,\"b\":6}'\n    await source(jsonl)\n      .pipeThrough(await deserializer({ lineSeparated: true }, native))\n      .pipeTo(logging())\n  }\n  console.groupEnd()\n\n  await sleep(0)\n\n  console.group(\"Performance test\")\n  {\n    const count = 100000\n    console.log(\"count\", count)\n\n    let json = \"[\" + '{\"a\":1,\"b\":2},'.repeat(count)\n    json = json.slice(0, -1) + \"]\"\n\n    const jsonl = '{\"a\":1,\"b\":2}\\n'.repeat(count)\n\n    console.group(\"JSON\")\n    await time(async () => {\n      await source(json)\n        .pipeThrough(await deserializer(undefined, native))\n        .pipeTo(terminate())\n    })\n    console.groupEnd()\n\n    await sleep(0)\n\n    console.group(\"JSON Lines\")\n    await time(async () => {\n      await source(jsonl)\n        .pipeThrough(await deserializer({ lineSeparated: true }, native))\n        .pipeTo(terminate())\n    })\n    console.groupEnd()\n  }\n  console.groupEnd()\n\n  await sleep(0)\n}\n\nconsole.group(\"Pure JavaScript\")\nawait test(false)\nconsole.groupEnd()\n\nconsole.group(\"WebAssembly\")\nawait test(true)\nconsole.groupEnd()\n\nconsole.log(\"Test completed.\")"],
  "mappings": "AAAA,SAAS,wBAAiD;AAC1D,SAAS,aAAa;AAEtB,MAAM,SAAS,CAAC,MAAc,IAAI,eAAe;AAAA,EAC/C,MAAM,YAAY;AAChB,eAAW,QAAQ,CAAC;AACpB,eAAW,MAAM;AAAA,EACnB;AACF,CAAC;AAED,MAAM,UAAU,MAAM,IAAI,eAAe;AAAA,EACvC,MAAM,OAAO;AACX,YAAQ,IAAI,KAAK;AAAA,EACnB;AACF,CAAC;AAED,MAAM,YAAY,MAAM,IAAI,eAAe;AAE3C,MAAM,OAAO,OAAO,OAA4B;AAC9C,cAAY,WAAW,OAAO;AAC9B,cAAY,WAAW,KAAK;AAC5B,cAAY,cAAc,MAAM;AAEhC,cAAY,KAAK,OAAO;AACxB,QAAM,GAAG;AACT,cAAY,KAAK,KAAK;AACtB,cAAY,QAAQ,QAAQ,SAAS,KAAK;AAC1C,QAAM,OAAO,YAAY,iBAAiB,MAAM,EAAE,CAAC;AACnD,UAAQ,IAAI,KAAK,QAAQ;AAC3B;AAEA,MAAM,eAAe,OAAO,SAAmC,WAAqB,UAC/E,MAAM,IAAI,iBAAiB,OAAO,EAAE,aAAa,GAAG,UAAU,IAC/D,IAAI,iBAAiB,OAAO,EAAE,UAAU;AAE5C,MAAM,OAAO,OAAO,WAAoB;AACtC,UAAQ,MAAM,MAAM;AACpB;AACE,UAAM,OAAO;AACb,UAAM,OAAO,IAAI,EACd,YAAY,MAAM,aAAa,QAAW,MAAM,CAAC,EACjD,OAAO,QAAQ,CAAC;AAAA,EACrB;AACA,UAAQ,SAAS;AAEjB,UAAQ,MAAM,YAAY;AAC1B;AACE,UAAM,QAAQ;AACd,UAAM,OAAO,KAAK,EACf,YAAY,MAAM,aAAa,EAAE,eAAe,KAAK,GAAG,MAAM,CAAC,EAC/D,OAAO,QAAQ,CAAC;AAAA,EACrB;AACA,UAAQ,SAAS;AAEjB,QAAM,MAAM,CAAC;AAEb,UAAQ,MAAM,kBAAkB;AAChC;AACE,UAAM,QAAQ;AACd,YAAQ,IAAI,SAAS,KAAK;AAE1B,QAAI,OAAO,MAAM,iBAAiB,OAAO,KAAK;AAC9C,WAAO,KAAK,MAAM,GAAG,EAAE,IAAI;AAE3B,UAAM,QAAQ,kBAAkB,OAAO,KAAK;AAE5C,YAAQ,MAAM,MAAM;AACpB,UAAM,KAAK,YAAY;AACrB,YAAM,OAAO,IAAI,EACd,YAAY,MAAM,aAAa,QAAW,MAAM,CAAC,EACjD,OAAO,UAAU,CAAC;AAAA,IACvB,CAAC;AACD,YAAQ,SAAS;AAEjB,UAAM,MAAM,CAAC;AAEb,YAAQ,MAAM,YAAY;AAC1B,UAAM,KAAK,YAAY;AACrB,YAAM,OAAO,KAAK,EACf,YAAY,MAAM,aAAa,EAAE,eAAe,KAAK,GAAG,MAAM,CAAC,EAC/D,OAAO,UAAU,CAAC;AAAA,IACvB,CAAC;AACD,YAAQ,SAAS;AAAA,EACnB;AACA,UAAQ,SAAS;AAEjB,QAAM,MAAM,CAAC;AACf;AAEA,QAAQ,MAAM,iBAAiB;AAC/B,MAAM,KAAK,KAAK;AAChB,QAAQ,SAAS;AAEjB,QAAQ,MAAM,aAAa;AAC3B,MAAM,KAAK,IAAI;AACf,QAAQ,SAAS;AAEjB,QAAQ,IAAI,iBAAiB;",
  "names": []
}
