async function w(s,y={}){const _={env:Object.assign(Object.create(globalThis),y.env||{},{abort(t,n,e,r){t=i(t>>>0),n=i(n>>>0),e=e>>>0,r=r>>>0,(()=>{throw Error(`${t} in ${n}:${e}:${r}`)})()}})},{exports:a}=await WebAssembly.instantiate(s,_),l=a.memory||y.env.memory,b=Object.setPrototypeOf({sanitize_json(t){return t=c(t)||f(),i(a.sanitize_json(t)>>>0)},sanitize_jsonl(t){return t=c(t)||f(),i(a.sanitize_jsonl(t)>>>0)},indexOfLastSeparator_json(t){return t=c(t)||f(),a.indexOfLastSeparator_json(t)},indexOfLastSeparator_jsonl(t){return t=c(t)||f(),a.indexOfLastSeparator_jsonl(t)}},a);function i(t){if(!t)return null;const n=t+new Uint32Array(l.buffer)[t-4>>>2]>>>1,e=new Uint16Array(l.buffer);let r=t>>>1,o="";for(;n-r>1024;)o+=String.fromCharCode(...e.subarray(r,r+=1024));return o+String.fromCharCode(...e.subarray(r,n))}function c(t){if(t==null)return 0;const n=t.length,e=a.__new(n<<1,2)>>>0,r=new Uint16Array(l.buffer);for(let o=0;o<n;++o)r[(e>>>1)+o]=t.charCodeAt(o);return e}function f(){throw TypeError("value must not be null")}return b}const{memory:d,sanitize_json:j,sanitize_jsonl:m,indexOfLastSeparator_json:p,indexOfLastSeparator_jsonl:h}=await(async s=>w(await(async()=>{try{return await globalThis.WebAssembly.compileStreaming(globalThis.fetch(s))}catch{return globalThis.WebAssembly.compile(await(await import("node:fs/promises")).readFile(s))}})(),{}))(new URL("JsonDeserializerNative.wasm",import.meta.url));export{p as indexOfLastSeparator_json,h as indexOfLastSeparator_jsonl,d as memory,j as sanitize_json,m as sanitize_jsonl};
//# sourceMappingURL=JsonDeserializerNative.min.js.map
