{
  "version": 3,
  "sources": ["JsonDeserializerNative.js"],
  "sourcesContent": ["async function instantiate(module, imports = {}) {\n  const adaptedImports = {\n    env: Object.assign(Object.create(globalThis), imports.env || {}, {\n      abort(message, fileName, lineNumber, columnNumber) {\n        // ~lib/builtins/abort(~lib/string/String | null?, ~lib/string/String | null?, u32?, u32?) => void\n        message = __liftString(message >>> 0);\n        fileName = __liftString(fileName >>> 0);\n        lineNumber = lineNumber >>> 0;\n        columnNumber = columnNumber >>> 0;\n        (() => {\n          // @external.js\n          throw Error(`${message} in ${fileName}:${lineNumber}:${columnNumber}`);\n        })();\n      },\n    }),\n  };\n  const { exports } = await WebAssembly.instantiate(module, adaptedImports);\n  const memory = exports.memory || imports.env.memory;\n  const adaptedExports = Object.setPrototypeOf({\n    sanitize_json(value) {\n      // dist/JsonDeserializer/JsonDeserializerNative/sanitize_json(~lib/string/String) => ~lib/string/String\n      value = __lowerString(value) || __notnull();\n      return __liftString(exports.sanitize_json(value) >>> 0);\n    },\n    sanitize_jsonl(value) {\n      // dist/JsonDeserializer/JsonDeserializerNative/sanitize_jsonl(~lib/string/String) => ~lib/string/String\n      value = __lowerString(value) || __notnull();\n      return __liftString(exports.sanitize_jsonl(value) >>> 0);\n    },\n    indexOfLastSeparator_json(value) {\n      // dist/JsonDeserializer/JsonDeserializerNative/indexOfLastSeparator_json(~lib/typedarray/Uint8Array) => i32\n      value = __lowerTypedArray(Uint8Array, 6, 0, value) || __notnull();\n      return exports.indexOfLastSeparator_json(value);\n    },\n  }, exports);\n  function __liftString(pointer) {\n    if (!pointer) return null;\n    const\n      end = pointer + new Uint32Array(memory.buffer)[pointer - 4 >>> 2] >>> 1,\n      memoryU16 = new Uint16Array(memory.buffer);\n    let\n      start = pointer >>> 1,\n      string = \"\";\n    while (end - start > 1024) string += String.fromCharCode(...memoryU16.subarray(start, start += 1024));\n    return string + String.fromCharCode(...memoryU16.subarray(start, end));\n  }\n  function __lowerString(value) {\n    if (value == null) return 0;\n    const\n      length = value.length,\n      pointer = exports.__new(length << 1, 2) >>> 0,\n      memoryU16 = new Uint16Array(memory.buffer);\n    for (let i = 0; i < length; ++i) memoryU16[(pointer >>> 1) + i] = value.charCodeAt(i);\n    return pointer;\n  }\n  function __lowerTypedArray(constructor, id, align, values) {\n    if (values == null) return 0;\n    const\n      length = values.length,\n      buffer = exports.__pin(exports.__new(length << align, 1)) >>> 0,\n      header = exports.__new(12, id) >>> 0;\n    __setU32(header + 0, buffer);\n    __dataview.setUint32(header + 4, buffer, true);\n    __dataview.setUint32(header + 8, length << align, true);\n    new constructor(memory.buffer, buffer, length).set(values);\n    exports.__unpin(buffer);\n    return header;\n  }\n  function __notnull() {\n    throw TypeError(\"value must not be null\");\n  }\n  let __dataview = new DataView(memory.buffer);\n  function __setU32(pointer, value) {\n    try {\n      __dataview.setUint32(pointer, value, true);\n    } catch {\n      __dataview = new DataView(memory.buffer);\n      __dataview.setUint32(pointer, value, true);\n    }\n  }\n  return adaptedExports;\n}\nexport const {\n  memory,\n  sanitize_json,\n  sanitize_jsonl,\n  indexOfLastSeparator_json,\n} = await (async url => instantiate(\n  await (async () => {\n    try { return await globalThis.WebAssembly.compileStreaming(globalThis.fetch(url)); }\n    catch { return globalThis.WebAssembly.compile(await (await import(\"node:fs/promises\")).readFile(url)); }\n  })(), {\n  }\n))(new URL(\"JsonDeserializerNative.wasm\", import.meta.url));\n"],
  "mappings": "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",
  "names": ["instantiate", "module", "imports", "adaptedImports", "message", "fileName", "lineNumber", "columnNumber", "__liftString", "exports", "memory", "adaptedExports", "value", "__lowerString", "__notnull", "__lowerTypedArray", "pointer", "end", "memoryU16", "start", "string", "length", "constructor", "id", "align", "values", "buffer", "header", "__setU32", "__dataview", "sanitize_json", "sanitize_jsonl", "indexOfLastSeparator_json", "url"]
}
